---
import { BLOG } from '~/config.mjs';

import Layout from '~/layouts/PageLayout.astro';
import SinglePost from '~/components/blog/SinglePost.astro';
import ToBlogLink from '~/components/blog/ToBlogLink.astro';
import GridItemSmall from '~/components/blog/GridItemSmall.astro';
import { getCanonical, getPermalink } from '~/utils/permalinks';
import { fetchPosts, findSimilarPosts, findPostsInSeries } from '~/utils/blog';
import { findImage } from '~/utils/images';

export async function getStaticPaths() {
  if (BLOG?.disabled || BLOG?.post?.disabled) return [];
  return (await fetchPosts()).map((post) => {
    const similarPosts = findSimilarPosts(post);
    const postsInSeries = findPostsInSeries(post.series);

    return {
      params: {
        blog: post.permalink,
      },
      props: { post, similarPosts, postsInSeries },
    };
  });
}

const { post, similarPosts, postsInSeries } = Astro.props as {
  post: Post;
  similarPosts: Post[];
  postsInSeries: Post[];
};
const url = getCanonical(getPermalink(post.permalink, 'post'));

const meta = {
  title: post.title,
  description: post.description,
  canonical: post.canonical || url,
  image: await findImage(post.image),
  noindex: BLOG?.post?.noindex,
  ogType: 'article',
};
---

<Layout {meta}>
  <SinglePost post={{ ...post, image: meta.image }} url={url} />
  <div class="grid mx-auto p-4 max-w-xl">
    {
      post.series && (
        <div>
          <div class="text-2xl font-bold mb-3 text-center">
            {post.seriesName} ({postsInSeries.length} Parts Series)
          </div>
          {postsInSeries.map((p, index) => (
            <div class="mb-3 flex items-center mx-auto transition hover:scale-105 duration-300">
              <span
                class={`inline-block w-6 h-6 mr-2 rounded-full text-center text-gray-50 ${
                  p.id === post.id ? 'bg-green-500 dark:bg-green-700' : 'bg-gray-400 dark:bg-gray-600'
                }`}
              >
                {index + 1}
              </span>
              <a href={getPermalink(p.permalink, 'post')}>{p.title}</a>
            </div>
          ))}
        </div>
      )
    }
  </div>
  <div class="text-2xl font-bold mb-3 text-center p-4">You might also like</div>
  <div class="grid mx-auto max-w-7xl ms:grid-cols-1 md:grid-cols-3 gap-4 mt-12 lg:grid lg:grid-cols-3" ">
    {
      similarPosts.map((post, i) => (
        <div class="flex-1 px-3">
          <GridItemSmall post={post} />
        </div>
      ))
    }
  </div>
  <ToBlogLink />
</Layout>
